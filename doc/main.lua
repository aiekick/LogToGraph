--Test()--LogInfo("c'est une info") --LogWarning("c'est un warning") --LogError("c'est une erreur") function Init()  	SetInfos("c'est une info")	SetBufferNameForCurrentLine("curLine");	SetBufferNameForLastLine("lastLine");	SetFunctionForEachLine("eachRow");	SetFunctionForEndFile("endFile");		LogInfo(" --- Start of file ---");endfunction eachRow()	_date, _equip, _unit, _name, _value = string.match(curLine, "Epoch\t(.*)Zulu.*%[(.*)%] (.*) Updated : (.*) == (.*)%(")	if _date ~= nil and _equip ~= nil and _unit ~= nil and _name ~= nil and _value ~= nil then		--LogInfo("date ".._date.." => Signal ".._equip.." ".._unit.." ".._name.." est ".._value)		AddSignalValue(_equip.."_".._unit, _name, _date, _value)	else		_date, _level, _unit, _name, _value = string.match(curLine, "<log date=\"(.*)\" level=\"(.*)\" source=.* unit=\"(.*)\"><ope name=\"(.*)\" value=\"(.*)\"/>")		if _date ~= nil and _level ~= nil and _unit ~= nil and _name ~= nil and _value ~= nil then			AddSignalValue(_unit, _name, _date, _value)		end	endendfunction endFile()	LogInfo(" --- End of file ---");end